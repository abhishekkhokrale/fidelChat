# Server Configuration
# ----------------------
# Railway sets a PORT env var automatically. Fallback to 8080 if not set.
server.port=${PORT:8080}

# ----------------------
# Database (example: MySQL/Postgres via Railway plugin)
# ----------------------
# Railway usually provides DATABASE_URL or specific vars (MYSQLHOST, MYSQLUSER, etc.)
# Adjust according to your DB choice.

# For MySQL (example)
spring.datasource.url=jdbc:mysql://localhost:3306/chat_app?createDatabaseIfNotExist=true&useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true&useSSL=false
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.username=root
spring.datasource.password=

# ----------------------
# JPA / Hibernate
# ----------------------
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
#spring.jpa.properties.hibernate.format_sql=true
# CORS Configuration
spring.web.cors.allowed-origins=http://localhost:3000
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.web.cors.allowed-headers=* 

# For Postgres (uncomment if you use PostgreSQL instead)
# spring.datasource.url=jdbc:postgresql://${PGHOST}:${PGPORT}/${PGDATABASE}
# spring.datasource.username=${PGUSER}
# spring.datasource.password=${PGPASSWORD}
# spring.datasource.driver-class-name=org.postgresql.Driver


# ----------------------
# Logging
# ----------------------
logging.level.org.springframework.web=INFO
logging.level.com.yourapp=DEBUG

# ----------------------
# Actuator (for Railway health check)
# ----------------------
management.endpoints.web.exposure.include=health,info
management.endpoint.health.probes.enabled=true
